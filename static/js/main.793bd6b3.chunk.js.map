{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","console","log","Votes","Container","maxWidth","style","marginTop","Grid","container","spacing","item","xs","Typography","variant","sm","List","dense","disablePadding","AZ","yea","map","voter","ListItem","disableGutters","ListItemText","primary","nay","PA","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"osEA8EeA,MA3Ef,WAGE,OADAC,QAAQC,IAAIC,GAEV,eAACC,EAAA,EAAD,CAAWC,SAAS,KAAKC,MAAO,CAACC,UAAW,IAA5C,UACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,6DAGF,eAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIG,GAAI,EAAvB,UACE,cAACF,EAAA,EAAD,CAAYC,QAAQ,KAApB,kBACA,cAACE,EAAA,EAAD,CAAMC,OAAO,EAAMC,gBAAgB,EAAnC,SAEIf,EAAMgB,GAAGC,IAAIC,KAAI,SAAAC,GACf,OAAO,cAACC,EAAA,EAAD,CAAUC,gBAAgB,EAA1B,SACL,cAACC,EAAA,EAAD,CAAcC,QAASJ,cAOjC,eAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIG,GAAI,EAAvB,UACE,cAACF,EAAA,EAAD,CAAYC,QAAQ,KAApB,kBACA,cAACE,EAAA,EAAD,CAAMC,OAAO,EAAMC,gBAAgB,EAAnC,SAEIf,EAAMgB,GAAGQ,IAAIN,KAAI,SAAAC,GACf,OAAO,cAACC,EAAA,EAAD,CAAUC,gBAAgB,EAA1B,SACL,cAACC,EAAA,EAAD,CAAcC,QAASJ,iBAUnC,eAACd,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIG,GAAI,EAAvB,SACE,cAACF,EAAA,EAAD,CAAYC,QAAQ,KAApB,iEAGF,eAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIG,GAAI,EAAvB,UACE,cAACF,EAAA,EAAD,CAAYC,QAAQ,KAApB,kBACA,cAACE,EAAA,EAAD,CAAMC,OAAO,EAAMC,gBAAgB,EAAnC,SAEIf,EAAMyB,GAAGR,IAAIC,KAAI,SAAAC,GACf,OAAO,cAACC,EAAA,EAAD,CAAUC,gBAAgB,EAA1B,SACL,cAACC,EAAA,EAAD,CAAcC,QAASJ,cAOjC,eAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,kBACA,cAACE,EAAA,EAAD,CAAMC,OAAO,EAAMC,gBAAgB,EAAnC,SAEIf,EAAMyB,GAAGD,IAAIN,KAAI,SAAAC,GACf,OAAO,cAACC,EAAA,EAAD,CAAUC,gBAAgB,EAA1B,SACL,cAACC,EAAA,EAAD,CAAcC,QAASJ,qBCtD1BO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.793bd6b3.chunk.js","sourcesContent":["import {Container, Grid, List, ListItem, ListItemText, Paper, Typography} from \"@material-ui/core\";\nimport Votes from './votes';\n\nfunction App() {\n\n  console.log(Votes);\n  return (\n    <Container maxWidth=\"lg\" style={{marginTop: 20}}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\">Objection to Arizona Electoral College Votes </Typography>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h6\">Yeas</Typography>\n          <List dense={true} disablePadding={true}>\n            {\n              Votes.AZ.yea.map(voter => {\n                return <ListItem disableGutters={true}>\n                  <ListItemText primary={voter} />\n                </ListItem>\n              })\n            }\n          </List>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h6\">Nays</Typography>\n          <List dense={true} disablePadding={true}>\n            {\n              Votes.AZ.nay.map(voter => {\n                return <ListItem disableGutters={true}>\n                  <ListItemText primary={voter} />\n                </ListItem>\n              })\n            }\n          </List>\n        </Grid>\n\n      </Grid>\n\n\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h5\">Objection to Pennsylvania Electoral College Votes</Typography>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h6\">Yeas</Typography>\n          <List dense={true} disablePadding={true}>\n            {\n              Votes.PA.yea.map(voter => {\n                return <ListItem disableGutters={true}>\n                  <ListItemText primary={voter} />\n                </ListItem>\n              })\n            }\n          </List>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Typography variant=\"h6\">Nays</Typography>\n          <List dense={true} disablePadding={true}>\n            {\n              Votes.PA.nay.map(voter => {\n                return <ListItem disableGutters={true}>\n                  <ListItemText primary={voter} />\n                </ListItem>\n              })\n            }\n          </List>\n        </Grid>\n\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}